---
export interface Props {
  /**
   * The indicator background color. Can be any valid CSS property.
   */
  color: string;
  /**
   * The indicator height. Can be any valid CSS property.
   *
   * @default "2px"
   */
  height?: string;
}

const { color, height = "2px" } = Astro.props;
---

<script define:vars={{ color, height }}>
  window.__astroLoadingIndicatorOptions = { color, height };
</script>
<script>
  import { configure, start, done } from "nprogress";
  import "nprogress/nprogress.js";
  import type { Props } from "./LoadingIndicator.astro";

  const resolveTemplate = ({ color, height }: Required<Props>): string => {
    const style = {
      "pointer-events": "none",
      background: `${color}`,
      position: "fixed",
      "z-index": "1031",
      top: "0",
      left: "0",
      width: "100%",
      height: `${height}`,
    };

    return `<div style="${Object.entries(style)
      .map(([key, value]) => `${key}: ${value};`)
      .join("")}" role="bar"></div>`;
  };

  declare global {
    interface Window {
      __astroLoadingIndicatorOptions: Required<Props>;
    }
  }

  const options = window.__astroLoadingIndicatorOptions;

  configure({
    template: resolveTemplate(options),
    showSpinner: false,
  });

  document.addEventListener("astro:before-preparation", () => {
    start();
  });
  document.addEventListener("astro:after-swap", () => {
    done();
  });
</script>
